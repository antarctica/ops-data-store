[tool.poetry]
name = "ops-data-store"
version = "0.4.0"
description = "Data store for hosted and managed datasets for BAS Field Operations and Air Unit."
authors = ["Felix Fennell <felnne@bas.ac.uk>"]
license = "MIT"
readme = "README.md"
packages = [{include = "ops_data_store", from = "src"}]

[tool.poetry.scripts]
ods-ctl = 'ops_data_store.cli:app'

[tool.poetry.dependencies]
environs = "^9.5.0"
gdal = "3.4.3"
psycopg = {version = "^3.1.12", extras = ["binary"]}
python = "^3.9"
typer = "^0.9.0"
msal = "^1.24.1"
requests = "^2.31.0"
python-ldap = "^3.4.3"

[tool.poetry.group.lint.dependencies]
black = "^23.9.1"
ruff = "^0.0.291"
safety = "^2.3.5"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.2"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.1"
pytest-random-order = "^1.1.0"
requests-mock = "^1.11.0"

[tool.black]
line-length = 120
target-version = ["py39"]

[tool.ruff]
src = ["src"]
line-length = 120
target-version = "py39"

select = ['A','ANN','B','B9','C90','C4','D','DTZ','E','EM','ERA','F','FA','I','N','PT','PTH','RET','RUF','S','SIM','TD','TRY','UP','W']
#   A | builtins (variables named after builtin names)
# ANN | annotations (type hints)
#   B | bug-bear (bad code)
#  B9 | bug-bear opinionated (additional bad code)
# C90 | mccabe (code complexity)
#  C4 | comprehensions (list/dict/set comprehensions)
#   D | pydocstyle (docstring)
# DTZ | datetimez (date/time)
#   E | pycodestyle errors (PEP8)
#  EM | errmsg (exceptions)
# ERA | eraticate (comments)
#   F | pyflakes (invalid/bad code)
#  FA | uture-annotations (type hints)
#   I | isort (import ordering)
#   N | pep8-naming (PEP8)
#  PT | pytest-style (tests)
# PTH | use-pathlib (old syntax)
# RET | return (return statements)
# RUF | ruff (other)
#   S | bandit (static security)
# SIM | simplicity (code complexity)
#  TD | todos (comments)
# TRY | tryceratops (exceptions)
#  UP | pyupgrade (old syntax)
#   W | pycodestyle warnings (PEP8)

ignore = ['ANN101', 'D100', 'D104', 'D107', 'D203', 'D212', 'D402', 'E501', 'TD002', 'UP007']
# ANN101 | for lack of 'Self' type in Python 3.9 (available 3.11+)
#   D100 | for avoding module level docstrings
#   D104 | for avoding package level docstrings
#   D203 | for requring blank line before classes (which looks silly)
#   D212 | for docstring requring multi-line comments to start on first line (which looks silly)
#   D402 | for docstring that can't resemble their signatures (despite them being completely different)
#   E501 | for bug-bear compatibility (as B905 overrides line length checks)
#  TD002 | for allowing TODOs without an author (as issue should assign ownership)
#  UP007 | for requring `Optional[T]` to be written as `T | None` which isn't supported by Python 3.9

[tool.ruff.extend-per-file-ignores]
"tests/*" = ["ANN201","ANN401","S101"]
"config.py" = ["N802"]
#   tests/* | ANN201 | ignore public functions
#   tests/* | ANN401 | ignore use of 'Any' type
#   tests/* |   S101 | ignore use of assert
# config.py |   N802 | ignore use of upper case method names

[tool.pytest.ini_options]
markers = [
  "cov: coverage checks (deselect with '-m \"not cov\"')",
]

[tool.coverage.report]
skip_empty = true
show_missing = false
fail_under = 100

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.run]
branch = true
source = ["src"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
